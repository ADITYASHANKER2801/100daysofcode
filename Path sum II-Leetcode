class Solution {
public:
    vector<vector<int>> ans;
    void solve(TreeNode* root, int targetSum, vector<int> temp) {
        if (root == nullptr) {
            return;
        }
        if (root->left == nullptr && root->right == nullptr) {
            temp.push_back(root->val);
            targetSum -= root->val;
            if (targetSum == 0) {
                ans.push_back(temp);
            }
            return;
        }
        temp.push_back(root->val);
        if (root->left != nullptr) {
            solve(root->left, targetSum - root->val, temp);
        }
        if (root->right != nullptr) {
            solve(root->right, targetSum - root->val, temp);
        }
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        solve(root, targetSum, {});
        return ans;
    }
};
